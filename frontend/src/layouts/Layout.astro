---
import '../styles/tailwind.css';
import '../styles/global.css';
import '../styles/themes/dark-theme.css';
import Sidebar from '../components/Sidebar.astro';
---

<html lang='en' class='dark'>
  <head>
    <meta charset='UTF-8' />
    <meta name='viewport' content='width=device-width, initial-scale=1.0' />
    <title>Dashboard</title>
  </head>
  <body class="bg-black">
    <div id="content-container" class="transition-transform duration-300 ease-in-out translate-x-0">
      <header class="sm:hidden flex items-center justify-between px-6 py-4 bg-black border-b border-gray-800 h-20">
        <div class="flex-1 flex justify-start">
          <img
            src='/img/Hodous-Logo.png'
            alt='Hodous Tools Logo'
            class='h-12 bg-neutral-950 p-0'
          />
        </div>
        <button
          id="sidebar-toggle"
          type="button"
          class="z-50 flex items-center justify-center p-2 rounded-md bg-blue-600 hover:bg-blue-500 focus:outline-none focus:ring-2 focus:ring-blue-300"
          aria-label="Open sidebar"
        >
          <svg
            class="h-6 w-6 text-white"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            viewBox="0 0 24 24"
          >
            <path stroke-linecap="round" stroke-linejoin="round" d="M4 6h16M4 12h16M4 18h16" />
          </svg>
        </button>
      </header>
      <div class='relative min-h-screen text-white m-0 p-0'>
        <div
          id='sidebar-container'
          class='fixed top-0 left-0 h-full w-64 bg-gray-900 transform transition-transform duration-500 ease-in-out -translate-x-full sm:translate-x-0 z-40'
        >
          <Sidebar />
        </div>
        <main id="main-content" class='sm:ml-64 p-0 m-0 transition-transform duration-500 ease-in-out'>
          <slot />
        </main>
      </div>
    </div>
  </body>
</html>

<script>
  (() => {
    const sidebarToggle = document.getElementById('sidebar-toggle');
    const mq = window.matchMedia('(min-width: 640px)');
    function closeSidebar() {
      document
        .getElementById('sidebar-container')
        ?.classList.add('-translate-x-full');
      const content = document.getElementById('main-content');
      if (content) content.style.transform = '';
    }
    function openSidebar() {
      document
        .getElementById('sidebar-container')
        ?.classList.remove('-translate-x-full');
      const content = document.getElementById('main-content');
      if (content) {
        const sidebar = document.getElementById('sidebar-container');
        const sidebarWidth = sidebar?.offsetWidth || 0;
        content.style.transform = `translateX(${sidebarWidth}px)`;
      }
    }
    sidebarToggle?.addEventListener('click', (e) => {
      e.stopPropagation();
      const sidebarContainer = document.getElementById('sidebar-container');
      if (sidebarContainer?.classList.contains('-translate-x-full')) {
        openSidebar();
      } else {
        closeSidebar();
      }
    });
    // Close sidebar when clicking outside
    document.addEventListener('click', (e) => {
      const sidebarContainer = document.getElementById('sidebar-container');
      if (
        sidebarContainer &&
        !sidebarContainer.classList.contains('-translate-x-full')
      ) {
        if (
          !sidebarContainer.contains(e.target) &&
          !sidebarToggle.contains(e.target)
        ) {
          closeSidebar();
        }
      }
    });
    // Close sidebar on resize to desktop
    mq.addEventListener('change', (e) => {
      if (e.matches) {
        closeSidebar();
      }
    });
  })();
</script>
